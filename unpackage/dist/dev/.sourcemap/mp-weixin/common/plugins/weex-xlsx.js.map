{"version":3,"file":"weex-xlsx.js","sources":["common/plugins/weex-xlsx.js"],"sourcesContent":["/**\r\n * xlsx wrapper for uni-app\r\n * 用于在小程序中处理Excel文件的插件\r\n */\r\n\r\n// 声明XLSX变量\r\nlet XLSX;\r\n\r\n// 动态加载XLSX库\r\ntry {\r\n  // 尝试直接导入\r\n  XLSX = require('xlsx');\r\n} catch (e) {\r\n  // 如果直接导入失败，提供一个基本的实现\r\n  console.warn('xlsx库加载失败，部分功能可能不可用', e);\r\n  XLSX = {\r\n    utils: {\r\n      book_new: () => ({}),\r\n      aoa_to_sheet: () => ({}),\r\n      book_append_sheet: () => ({}),\r\n    },\r\n    write: () => new Uint8Array(),\r\n  };\r\n}\r\n\r\n// 导出XLSX对象，使其可以在其他地方被引用\r\nexport default XLSX;\r\n\r\n// 注册为全局插件\r\nconst install = (Vue) => {\r\n  if (typeof Vue.prototype !== 'undefined') {\r\n    Vue.prototype.$xlsx = XLSX;\r\n  } else if (Vue.config && Vue.config.globalProperties) {\r\n    // Vue 3\r\n    Vue.config.globalProperties.$xlsx = XLSX;\r\n  }\r\n  \r\n  // 扩展uni对象\r\n  if (typeof uni !== 'undefined') {\r\n    uni.xlsx = XLSX;\r\n  }\r\n};\r\n\r\n// 自动安装\r\nif (typeof window !== 'undefined' && window.Vue) {\r\n  install(window.Vue);\r\n}\r\n\r\nexport {\r\n  XLSX,\r\n  install\r\n}; "],"names":["uni"],"mappings":";;AAMA,IAAI;AAGJ,IAAI;AAEF,SAAO,QAAQ,MAAM;AACvB,SAAS,GAAG;AAEVA,gBAAA,MAAA,MAAA,QAAA,qCAAa,uBAAuB,CAAC;AACrC,SAAO;AAAA,IACL,OAAO;AAAA,MACL,UAAU,OAAO,CAAA;AAAA,MACjB,cAAc,OAAO,CAAA;AAAA,MACrB,mBAAmB,OAAO,CAAA;AAAA,IAC3B;AAAA,IACD,OAAO,MAAM,IAAI,WAAY;AAAA,EACjC;AACA;AAMK,MAAC,UAAU,CAAC,QAAQ;AACvB,MAAI,OAAO,IAAI,cAAc,aAAa;AACxC,QAAI,UAAU,QAAQ;AAAA,EACvB,WAAU,IAAI,UAAU,IAAI,OAAO,kBAAkB;AAEpD,QAAI,OAAO,iBAAiB,QAAQ;AAAA,EACrC;AAGD,MAAI,OAAOA,cAAG,UAAK,aAAa;AAC9BA,kBAAG,MAAC,OAAO;AAAA,EACZ;AACH;AAGA,IAAI,OAAO,WAAW,eAAe,OAAO,KAAK;AAC/C,UAAQ,OAAO,GAAG;AACpB;;"}