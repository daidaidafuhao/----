{"version":3,"file":"index.js","sources":["pages/history/index.vue","../../HBuilderX.4.64.2025042916/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaGlzdG9yeS9pbmRleC52dWU"],"sourcesContent":["<template>\r\n\t<view class=\"container\">\r\n\t\t<view class=\"header\">\r\n\t\t\t<text class=\"title\">血糖历史记录</text>\r\n\t\t</view>\r\n\t\t\r\n\t\t<view class=\"filter-container\">\r\n\t\t\t<view class=\"date-filter\">\r\n\t\t\t\t<text class=\"filter-label\">日期范围：</text>\r\n\t\t\t\t<view class=\"date-pickers\">\r\n\t\t\t\t\t<view @click=\"onDatePickerClick\">\r\n\t\t\t\t\t\t<uni-datetime-picker type=\"date\" v-model=\"startDate\" @change=\"onDateChange\" @maskClick=\"onMaskClick\" />\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<text class=\"date-separator\">至</text>\r\n\t\t\t\t\t<view @click=\"onDatePickerClick\">\r\n\t\t\t\t\t\t<uni-datetime-picker type=\"date\" v-model=\"endDate\" @change=\"onDateChange\" @maskClick=\"onMaskClick\" />\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<button class=\"filter-button\" type=\"primary\" @click=\"searchRecords\">筛选</button>\r\n\t\t</view>\r\n\t\t\r\n\t\t<view class=\"chart-container\" v-if=\"hasRecords && !isDatePickerOpen\">\r\n\t\t\t<view class=\"chart-title\">血糖变化趋势</view>\r\n\t\t\t<view class=\"chart-legend\">\r\n\t\t\t\t<view class=\"legend-item\">\r\n\t\t\t\t\t<view class=\"legend-color\" style=\"background-color: #4095E5;\"></view>\r\n\t\t\t\t\t<text class=\"legend-text\">空腹血糖</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"legend-item\">\r\n\t\t\t\t\t<view class=\"legend-color\" style=\"background-color: #FF6B6B;\"></view>\r\n\t\t\t\t\t<text class=\"legend-text\">餐后血糖</text>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t\t<!-- 图表区域 -->\r\n\t\t\t<canvas canvas-id=\"glucoseChart\" id=\"glucoseChart\" class=\"glucose-chart\" @touchstart=\"touchstart\" @touchmove=\"touchmove\" @touchend=\"touchend\"></canvas>\r\n\t\t</view>\r\n\t\t\r\n\t\t<view class=\"list-container\">\r\n\t\t\t<view class=\"list-header\">\r\n\t\t\t\t<text class=\"list-header-item\">日期</text>\r\n\t\t\t\t<text class=\"list-header-item\">空腹血糖</text>\r\n\t\t\t\t<text class=\"list-header-item\">餐后血糖</text>\r\n\t\t\t\t<text class=\"list-header-item\">血压</text>\r\n\t\t\t</view>\r\n\t\t\t\r\n\t\t\t<view class=\"no-data\" v-if=\"!hasRecords\">\r\n\t\t\t\t<text>暂无记录</text>\r\n\t\t\t</view>\r\n\t\t\t\r\n\t\t\t<scroll-view class=\"record-list\" scroll-y v-else>\r\n\t\t\t\t<view class=\"record-item\" v-for=\"(item, index) in records\" :key=\"index\">\r\n\t\t\t\t\t<text class=\"record-date\">{{item.date}}</text>\r\n\t\t\t\t\t<text class=\"record-value\">{{item.fastingGlucose}}</text>\r\n\t\t\t\t\t<text class=\"record-value\">{{item.postprandialGlucose}}</text>\r\n\t\t\t\t\t<text class=\"record-value\">{{item.bloodPressure}}</text>\r\n\t\t\t\t</view>\r\n\t\t\t</scroll-view>\r\n\t\t</view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\r\n\timport { checkLoginAndRedirect } from '../../common/api/login.js';\r\n\timport { getWechatLoginState } from '../../common/api/wechat.js';\r\n\r\n\timport uCharts  from './zujian/u-charts.js';\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tstartDate: this.getLastMonthDate(),\r\n\t\t\t\tendDate: this.getCurrentDate(),\r\n\t\t\t\trecords: [],\r\n\t\t\t\tloading: false,\r\n\t\t\t\tpage: 1,\r\n\t\t\t\tpageSize: 20,\r\n\t\t\t\ttotal: 0,\r\n\t\t\t\thasMore: false,\r\n\t\t\t\tcWidth: 0,\r\n\t\t\t\tcHeight: 0,\r\n\t\t\t\tpixelRatio: 1,\r\n\t\t\t\tglucoseChart: null,\r\n\t\t\t\tisDatePickerOpen: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\thasRecords() {\r\n\t\t\t\treturn this.records && this.records.length > 0;\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tgetCurrentDate() {\r\n\t\t\t\tconst date = new Date();\r\n\t\t\t\tconst year = date.getFullYear();\r\n\t\t\t\tconst month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n\t\t\t\tconst day = date.getDate().toString().padStart(2, '0');\r\n\t\t\t\treturn `${year}-${month}-${day}`;\r\n\t\t\t},\r\n\t\t\tgetLastMonthDate() {\r\n\t\t\t\tconst date = new Date();\r\n\t\t\t\tdate.setMonth(date.getMonth() - 1);\r\n\t\t\t\tconst year = date.getFullYear();\r\n\t\t\t\tconst month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n\t\t\t\tconst day = date.getDate().toString().padStart(2, '0');\r\n\t\t\t\treturn `${year}-${month}-${day}`;\r\n\t\t\t},\r\n\t\t\t// 格式化日期显示 - 简化为MM-DD格式\r\n\t\t\tformatShortDate(dateString) {\r\n\t\t\t\tif (!dateString) return '';\r\n\t\t\t\t\r\n\t\t\t\tconst date = new Date(dateString);\r\n\t\t\t\tconst month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n\t\t\t\tconst day = date.getDate().toString().padStart(2, '0');\r\n\t\t\t\treturn `${month}-${day}`;\r\n\t\t\t},\r\n\t\t\t// 从云函数加载数据\r\n\t\t\tloadRecordsFromCloud() {\r\n\t\t\t\tthis.loading = true;\r\n\t\t\t\t\r\n\t\t\t\t// 获取用户ID\r\n\t\t\t\tconst loginState = getWechatLoginState();\r\n\t\t\t\tif (!loginState.isLoggedIn) {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '您尚未登录',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tcheckLoginAndRedirect();\r\n\t\t\t\t\t}, 1500);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 调用云函数获取血糖记录列表\r\n\t\t\t\tuniCloud.callFunction({\r\n\t\t\t\t\tname: 'glucose-service',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\taction: 'list',\r\n\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\tuserId: loginState.userInfo._id || loginState.openid,\r\n\t\t\t\t\t\t\tstartDate: this.startDate,\r\n\t\t\t\t\t\t\tendDate: this.endDate,\r\n\t\t\t\t\t\t\tpage: this.page,\r\n\t\t\t\t\t\t\tpageSize: this.pageSize\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}).then(res => {\r\n\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t\tuni.hideLoading(); // 确保隐藏加载提示\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (res.result && res.result.code === 0) {\r\n\t\t\t\t\t\t// 格式化数据\r\n\t\t\t\t\t\tconst formattedRecords = (res.result.data.list || []).map(item => {\r\n\t\t\t\t\t\t\t// 调试输出查看返回字段\r\n\t\t\t\t\t\t\tconsole.log('原始记录数据:', item);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// 处理不同字段名称可能性 (fasting_glucose 或 fastingGlucose)\r\n\t\t\t\t\t\t\tconst fastingGlucose = item.fastingGlucose !== undefined ? item.fastingGlucose : \r\n\t\t\t\t\t\t\t\t\t\t\t\t  (item.fasting_glucose !== undefined ? item.fasting_glucose : undefined);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst postprandialGlucose = item.postprandialGlucose !== undefined ? item.postprandialGlucose : \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   (item.postprandial_glucose !== undefined ? item.postprandial_glucose : undefined);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\tconst bloodPressure = item.bloodPressure !== undefined ? item.bloodPressure : \r\n\t\t\t\t\t\t\t\t\t\t\t\t (item.blood_pressure !== undefined ? item.blood_pressure : undefined);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: item._id,\r\n\t\t\t\t\t\t\t\tdate: this.formatShortDate(item.date),\r\n\t\t\t\t\t\t\t\tfastingGlucose: fastingGlucose !== undefined ? parseFloat(fastingGlucose).toFixed(1) : '-',\r\n\t\t\t\t\t\t\t\tpostprandialGlucose: postprandialGlucose !== undefined ? parseFloat(postprandialGlucose).toFixed(1) : '-',\r\n\t\t\t\t\t\t\t\tbloodPressure: bloodPressure || '-'\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (this.page === 1) {\r\n\t\t\t\t\t\t\t// 第一页，直接替换数据\r\n\t\t\t\t\t\t\tthis.records = formattedRecords;\r\n\t\t\t\t\t\t\t// 更新图表，仅当不在日期选择状态时\r\n\t\t\t\t\t\t\tif (formattedRecords.length > 0 && !this.isDatePickerOpen) {\r\n\t\t\t\t\t\t\t\tthis.drawGlucoseChart();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// 不是第一页，追加数据\r\n\t\t\t\t\t\t\tthis.records = [...this.records, ...formattedRecords];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 更新分页信息\r\n\t\t\t\t\t\tthis.total = res.result.data.total || 0;\r\n\t\t\t\t\t\tthis.hasMore = this.records.length < this.total;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (this.records.length === 0) {\r\n\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\ttitle: '暂无记录',\r\n\t\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: (res.result && res.result.message) || '获取记录失败',\r\n\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch(err => {\r\n\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t\tuni.hideLoading(); // 确保隐藏加载提示\r\n\t\t\t\t\t\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '网络错误，请稍后重试',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tconsole.error('获取血糖记录失败', err);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t// 搜索记录\r\n\t\t\tsearchRecords() {\r\n\t\t\t\t// 重置页码\r\n\t\t\t\tthis.page = 1;\r\n\t\t\t\t\r\n\t\t\t\t// 显示加载提示\r\n\t\t\t\tif (!this.loading) {\r\n\t\t\t\t\tuni.showLoading({\r\n\t\t\t\t\t\ttitle: '加载中...'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// 关闭日期选择器状态\r\n\t\t\t\tthis.isDatePickerOpen = false;\r\n\t\t\t\t\r\n\t\t\t\t// 加载数据\r\n\t\t\t\tthis.loadRecordsFromCloud();\r\n\t\t\t},\r\n\t\t\t// 加载更多\r\n\t\t\tloadMore() {\r\n\t\t\t\tif (this.loading || !this.hasMore) return;\r\n\t\t\t\t\r\n\t\t\t\tthis.page++;\r\n\t\t\t\tthis.loadRecordsFromCloud();\r\n\t\t\t},\r\n\t\t\t// 绘制血糖趋势图表\r\n\t\t\tdrawGlucoseChart() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 检查是否有足够的数据\r\n\t\t\t\t\tif (!this.records || this.records.length === 0) {\r\n\t\t\t\t\t\tconsole.log('没有足够的数据来绘制图表');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 处理数据，按日期倒序排列，最多显示7个点\r\n\t\t\t\t\tconst displayRecords = [...this.records].reverse().slice(0, 7);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 准备图表数据\r\n\t\t\t\t\tconst categories = displayRecords.map(item => item.date);\r\n\t\t\t\t\tconst fastingData = displayRecords.map(item => \r\n\t\t\t\t\t\titem.fastingGlucose && item.fastingGlucose !== '-' ? parseFloat(item.fastingGlucose) : null\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst postprandialData = displayRecords.map(item => \r\n\t\t\t\t\t\titem.postprandialGlucose && item.postprandialGlucose !== '-' ? parseFloat(item.postprandialGlucose) : null\r\n\t\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log('图表数据:', { categories, fastingData, postprandialData });\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 计算Y轴最小值和最大值，留出足够空间\r\n\t\t\t\t\tconst allValues = [...fastingData, ...postprandialData].filter(val => val !== null && !isNaN(val));\r\n\t\t\t\t\tif (allValues.length === 0) {\r\n\t\t\t\t\t\tconsole.log('没有有效的数据点');\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst minValue = Math.min(...allValues);\r\n\t\t\t\t\tconst maxValue = Math.max(...allValues);\r\n\t\t\t\t\t// 扩大Y轴范围，确保数据不挤在一起\r\n\t\t\t\t\tconst range = Math.max(maxValue - minValue, 1); // 防止range为0\r\n\t\t\t\t\tconst yAxisMin = Math.max(0, minValue - range * 0.2);\r\n\t\t\t\t\tconst yAxisMax = maxValue + range * 0.2;\r\n\t\t\t\t\t \r\n\t\t\t\t\t// 获取canvas上下文\r\n\t\t\t\t\tconst ctx = uni.createCanvasContext('glucoseChart', this);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 确保Canvas尺寸正确设置\r\n\t\t\t\t\tthis.cWidth = Math.max(this.cWidth, 300); // 确保最小宽度\r\n\t\t\t\t\tthis.cHeight = Math.max(this.cHeight, 280); // 确保最小高度\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 简化图表配置，确保数据显示正确\r\n\t\t\t\t\tconst options = {\r\n\t\t\t\t\t\t$this: this,\r\n\t\t\t\t\t\tcanvasId: 'glucoseChart',\r\n\t\t\t\t\t\ttype: 'line',\r\n\t\t\t\t\t\tcategories: categories,\r\n\t\t\t\t\t\tseries: [{\r\n\t\t\t\t\t\t\tname: '空腹血糖',\r\n\t\t\t\t\t\t\tdata: fastingData,\r\n\t\t\t\t\t\t\tcolor: '#4095E5',\r\n\t\t\t\t\t\t\tpointShape: 'circle',\r\n\t\t\t\t\t\t\tpointStyle: 'fill',    // 实心点\r\n\t\t\t\t\t\t\tpointSize: 8,          // 增大点大小\r\n\t\t\t\t\t\t\tformat: (val) => val !== null && !isNaN(val) ? val.toFixed(1) : '-'\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tname: '餐后血糖',\r\n\t\t\t\t\t\t\tdata: postprandialData,\r\n\t\t\t\t\t\t\tcolor: '#FF6B6B',\r\n\t\t\t\t\t\t\tpointShape: 'circle',\r\n\t\t\t\t\t\t\tpointStyle: 'fill',    // 实心点\r\n\t\t\t\t\t\t\tpointSize: 8,          // 增大点大小\r\n\t\t\t\t\t\t\tformat: (val) => val !== null && !isNaN(val) ? val.toFixed(1) : '-'\r\n\t\t\t\t\t\t}],\r\n\t\t\t\t\t\twidth: this.cWidth,\r\n\t\t\t\t\t\theight: this.cHeight,\r\n\t\t\t\t\t\tpixelRatio: this.pixelRatio,\r\n\t\t\t\t\t\tanimation: false,        // 关闭动画\r\n\t\t\t\t\t\tbackground: '#FFFFFF',\r\n\t\t\t\t\t\tpadding: [30, 15, 50, 20], // [上, 右, 下, 左] 进一步减小左右边距\r\n\t\t\t\t\t\tdataLabel: true,         // 显示数据标签\r\n\t\t\t\t\t\tdataPointShape: true,     // 显示数据点\r\n\t\t\t\t\t\tenableScroll: false,      // 禁用滚动\r\n\t\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\t\tshow: false           // 图例已在外部显示\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\txAxis: {\r\n\t\t\t\t\t\t\ttype: 'category',     // 类别轴\r\n\t\t\t\t\t\t\tboundaryGap: false,    // 减少两端留白\r\n\t\t\t\t\t\t\tdisableGrid: true,     // 不显示网格线\r\n\t\t\t\t\t\t\tfontColor: '#666666',\r\n\t\t\t\t\t\t\tfontSize: 10,          // 减小字体大小\r\n\t\t\t\t\t\t\titemCount: categories.length, // 显示所有类别\r\n\t\t\t\t\t\t\taxisLine: true,        // 显示轴线\r\n\t\t\t\t\t\t\tmargin: 3              // 进一步减小X轴边距\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tyAxis: {\r\n\t\t\t\t\t\t\tposition: 'left',     // 轴位置\r\n\t\t\t\t\t\t\ttype: 'value',        // 数值轴\r\n\t\t\t\t\t\t\tdisabled: false,      // 显示Y轴\r\n\t\t\t\t\t\t\tdisableGrid: false,   // 显示网格线\r\n\t\t\t\t\t\t\tsplitNumber: 5,       // Y轴分段数\r\n\t\t\t\t\t\t\tgridType: 'dash',     // 网格线类型\r\n\t\t\t\t\t\t\tgridColor: '#CCCCCC', // 网格线颜色\r\n\t\t\t\t\t\t\tmin: yAxisMin,        // 最小值\r\n\t\t\t\t\t\t\tmax: yAxisMax,        // 最大值\r\n\t\t\t\t\t\t\tformat: (val) => val !== null && !isNaN(val) ? val.toFixed(1) : '-', // 格式化\r\n\t\t\t\t\t\t\taxisLine: true,       // 显示轴线\r\n\t\t\t\t\t\t\tfontColor: '#666666',\r\n\t\t\t\t\t\t\tfontSize: 10,\r\n\t\t\t\t\t\t\ttitle: '血糖值',       // Y轴标题\r\n\t\t\t\t\t\t\ttitleFontColor: '#666666',\r\n\t\t\t\t\t\t\twidth: 10            // 进一步减小Y轴宽度\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\textra: {\r\n\t\t\t\t\t\t\tline: {\r\n\t\t\t\t\t\t\t\ttype: 'straight',   // 直线\r\n\t\t\t\t\t\t\t\twidth: 3,           // 线宽\r\n\t\t\t\t\t\t\t\tactiveType: 'hollow', // 点击后突出显示点\r\n\t\t\t\t\t\t\t\tactiveColor: '#000000', // 点击激活颜色\r\n\t\t\t\t\t\t\t\tactiveRadius: 10     // 点击激活半径\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttooltip: {\r\n\t\t\t\t\t\t\t\tshowBox: true,\r\n\t\t\t\t\t\t\t\tshowArrow: true,\r\n\t\t\t\t\t\t\t\tborderWidth: 1,\r\n\t\t\t\t\t\t\t\tborderRadius: 3,\r\n\t\t\t\t\t\t\t\tborderColor: '#CCCCCC',\r\n\t\t\t\t\t\t\t\tbgColor: '#FFFFFF',\r\n\t\t\t\t\t\t\t\tfontColor: '#666666',\r\n\t\t\t\t\t\t\t\tfontSize: 12\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tcontext: ctx\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 先绘制背景，确保画布已清空\r\n\t\t\t\t\tctx.setFillStyle('#FFFFFF');\r\n\t\t\t\t\tctx.fillRect(0, 0, this.cWidth, this.cHeight);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 创建图表实例并立即绘制\r\n\t\t\t\t\tthis.glucoseChart = new uCharts(options);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 强制绘制图表 - 关键修复\r\n\t\t\t\t\tctx.draw(true, () => {\r\n\t\t\t\t\t\tconsole.log('Canvas绘制完成');\r\n\t\t\t\t\t\t// 200ms后再次更新，确保图表显示\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tif (this.glucoseChart) {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tconsole.log('执行更新...');\r\n\t\t\t\t\t\t\t\t\t// 重新创建图表实例\r\n\t\t\t\t\t\t\t\t\tthis.glucoseChart = new uCharts(options);\r\n\t\t\t\t\t\t\t\t\t// 立即重绘\r\n\t\t\t\t\t\t\t\t\tctx.draw(true);\r\n\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\tconsole.error('更新图表失败', err);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, 200);\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error('绘制图表过程中出错', error);\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '图表绘制失败',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 图表触摸事件处理\r\n\t\t\ttouchstart(e) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (this.glucoseChart) {\r\n\t\t\t\t\t\tthis.glucoseChart.touchLegend(e);\r\n\t\t\t\t\t\tthis.glucoseChart.showToolTip(e, {\r\n\t\t\t\t\t\t\tformat: function(item, category) {\r\n\t\t\t\t\t\t\t\tif (item.data === null || isNaN(item.data)) {\r\n\t\t\t\t\t\t\t\t\treturn category + ' ' + item.name + ': 无数据';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn category + ' ' + item.name + ': ' + item.data + ' mmol/L';\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tfontSize: 13,\r\n\t\t\t\t\t\t\tlineHeight: 22\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error('处理触摸事件失败', error);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttouchmove(e) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (this.glucoseChart) {\r\n\t\t\t\t\t\tthis.glucoseChart.showToolTip(e, {\r\n\t\t\t\t\t\t\tformat: function(item, category) {\r\n\t\t\t\t\t\t\t\tif (item.data === null || isNaN(item.data)) {\r\n\t\t\t\t\t\t\t\t\treturn category + ' ' + item.name + ': 无数据';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn category + ' ' + item.name + ': ' + item.data + ' mmol/L';\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tfontSize: 13,\r\n\t\t\t\t\t\t\tlineHeight: 22\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error('处理移动事件失败', error);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttouchend(e) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (this.glucoseChart) {\r\n\t\t\t\t\t\tthis.glucoseChart.touchLegend(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error('处理触摸结束事件失败', error);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDateChange(value) {\r\n\t\t\t\tconsole.log('日期变更:', value);\r\n\t\t\t\t// 日期发生变化，表示选择器完成选择\r\n\t\t\t\tthis.isDatePickerOpen = false;\r\n\t\t\t\t\r\n\t\t\t\t// 延迟重绘图表\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (this.hasRecords) {\r\n\t\t\t\t\t\tthis.drawGlucoseChart();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 300);\r\n\t\t\t},\r\n\t\t\tonMaskClick() {\r\n\t\t\t\tconsole.log('遮罩点击');\r\n\t\t\t\t// 点击遮罩通常表示关闭选择器\r\n\t\t\t\tthis.isDatePickerOpen = false;\r\n\t\t\t\t\r\n\t\t\t\t// 延迟重绘图表\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tif (this.hasRecords) {\r\n\t\t\t\t\t\tthis.drawGlucoseChart();\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 300);\r\n\t\t\t},\r\n\t\t\t// 点击日期选择器时触发\r\n\t\t\tonDatePickerClick() {\r\n\t\t\t\tconsole.log('点击日期选择器');\r\n\t\t\t\tthis.isDatePickerOpen = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\tonLoad() {\r\n\t\t\tconsole.log('onLoad');\r\n\t\t\t\r\n\t\t\t// 检查登录状态，如果未登录则重定向到登录页面\r\n\t\t\tif (!checkLoginAndRedirect()) {\r\n\t\t\t\treturn; // 用户未登录，已重定向到登录页面\r\n\t\t\t}\r\n\t\t\t// 加载数据\r\n\t\t\tthis.loadRecordsFromCloud();\r\n\t\t},\r\n\t\tonShow() {\r\n\t\t\tconsole.log('onShow');\r\n\t\t\t\r\n\t\t\t// 每次页面显示时检查登录状态\r\n\t\t\tif (!checkLoginAndRedirect()) {\r\n\t\t\t\treturn; // 用户未登录，已重定向到登录页面\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// 每次切换到该页面时都重新加载数据\r\n\t\t\tthis.page = 1; // 重置页码\r\n\t\t\tthis.loadRecordsFromCloud();\r\n\t\t},\r\n\t\tonReady() {\r\n\t\t\t// 页面渲染完成后如果有数据则绘制图表\r\n\t\t\t// 添加延迟，确保页面完全加载\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (this.hasRecords) {\r\n\t\t\t\t\tconsole.log('onReady开始绘制图表');\r\n\t\t\t\t\tthis.drawGlucoseChart();\r\n\t\t\t\t}\r\n\t\t\t}, 300);\r\n\t\t},\r\n\t\t// 下拉刷新\r\n\t\tonPullDownRefresh() {\r\n\t\t\tthis.page = 1;\r\n\t\t\tthis.loadRecordsFromCloud();\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tuni.stopPullDownRefresh();\r\n\t\t\t}, 1000);\r\n\t\t},\r\n\t\t// 触底加载更多\r\n\t\tonReachBottom() {\r\n\t\t\tthis.loadMore();\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.container {\r\n\t\tpadding: 20px;\r\n\t}\r\n\t\r\n\t.header {\r\n\t\tmargin-bottom: 20px;\r\n\t}\r\n\t\r\n\t.title {\r\n\t\tfont-size: 24px;\r\n\t\tfont-weight: bold;\r\n\t\tcolor: #4095E5;\r\n\t}\r\n\t\r\n\t.filter-container {\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 10px;\r\n\t\tpadding: 15px;\r\n\t\tmargin-bottom: 20px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0,0,0,0.05);\r\n\t}\r\n\t\r\n\t.date-filter {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\t\r\n\t.filter-label {\r\n\t\tmargin-bottom: 5px;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\t\r\n\t.date-pickers {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t}\r\n\t\r\n\t.date-separator {\r\n\t\tmargin: 0 10px;\r\n\t}\r\n\t\r\n\t.filter-button {\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n\t.chart-container {\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 10px;\r\n\t\tpadding: 15px;\r\n\t\tpadding-bottom: 25px;\r\n\t\tmargin-bottom: 20px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0,0,0,0.05);\r\n\t}\r\n\t\r\n\t.chart-title {\r\n\t\tfont-size: 18px;\r\n\t\tfont-weight: bold;\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\t\r\n\t.chart-legend {\r\n\t\tdisplay: flex;\r\n\t\tmargin-bottom: 15px;\r\n\t}\r\n\t\r\n\t.legend-item {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tmargin-right: 20px;\r\n\t}\r\n\t\r\n\t.legend-color {\r\n\t\twidth: 15px;\r\n\t\theight: 15px;\r\n\t\tborder-radius: 3px;\r\n\t\tmargin-right: 5px;\r\n\t}\r\n\t\r\n\t.glucose-chart {\r\n\t\twidth: 100%;\r\n\t\theight: 280px;\r\n\t\t/* 确保Canvas有正确的边距和布局 */\r\n\t\tdisplay: block;\r\n\t\tmargin: 0 auto;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\t\r\n\t.list-container {\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 10px;\r\n\t\tpadding: 15px;\r\n\t\tbox-shadow: 0 2px 10px rgba(0,0,0,0.05);\r\n\t}\r\n\t\r\n\t.list-header {\r\n\t\tdisplay: flex;\r\n\t\tpadding: 10px 0;\r\n\t\tborder-bottom: 1px solid #eee;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\t\r\n\t.list-header-item {\r\n\t\tflex: 1;\r\n\t\ttext-align: center;\r\n\t}\r\n\t\r\n\t.no-data {\r\n\t\tpadding: 30px 0;\r\n\t\ttext-align: center;\r\n\t\tcolor: #999;\r\n\t}\r\n\t\r\n\t.record-list {\r\n\t\theight: 300px;\r\n\t}\r\n\t\r\n\t.record-item {\r\n\t\tdisplay: flex;\r\n\t\tpadding: 12px 0;\r\n\t\tborder-bottom: 1px solid #f5f5f5;\r\n\t}\r\n\t\r\n\t.record-date {\r\n\t\tflex: 1;\r\n\t\ttext-align: center;\r\n\t}\r\n\t\r\n\t.record-value {\r\n\t\tflex: 1;\r\n\t\ttext-align: center;\r\n\t}\r\n</style>","import MiniProgramPage from 'D:/pfh/git/----/pages/history/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["getWechatLoginState","uni","checkLoginAndRedirect","uniCloud","uCharts"],"mappings":"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"}